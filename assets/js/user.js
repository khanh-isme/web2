// L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
function fetchUser() {
    fetch('/web2/includes/get_infoUser.php')
        .then(res => res.text())
        .then(text => {
            try {
                const data = JSON.parse(text);
                if (data.status === 'success') {
                    const user = data.user;
                    document.getElementById("name").textContent = user.name;
                    document.getElementById("email").textContent = user.email;
                    document.getElementById("phone").textContent = user.phone;
                    document.getElementById("address").textContent = user.address;
                    document.getElementById("status").textContent = user.status;
                } else {
                    document.getElementById("user-info").style.display = "none";
                    document.getElementById("user-error").textContent = data.message;
                }
            } catch (e) {
                console.error("D·ªØ li·ªáu JSON kh√¥ng h·ª£p l·ªá:", text);
            }
        })
        .catch(err => {
            console.error("L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:", err);
            document.getElementById("user-error").textContent = "Kh√¥ng th·ªÉ t·∫£i th√¥ng tin ng∆∞·ªùi d√πng.";
        });
}

// L·∫•y danh s√°ch ƒë∆°n h√†ng
function fetchOrders() {
    fetch('/web2/includes/get_orders.php')
        .then(res => res.text())
        .then(text => {
            try {
                const data = JSON.parse(text);
                const container = document.getElementById("order-list");
                container.innerHTML = "";

                if (data.status !== 'success' || !data.orders.length) {
                    container.innerHTML = `<p class="error">${data.message || "Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o."}</p>`;
                    return;
                }

                data.orders.forEach(order => {
                    const orderElement = document.createElement("div");
                    orderElement.classList.add("order-item");
                    orderElement.innerHTML = `
                        <div class="order-item-element">
                            <h4>ƒê∆°n h√†ng #${order.order_id}</h4>
                            <p>Ng√†y ƒë·∫∑t: ${order.order_date}</p>
                            <p>T·ªïng ti·ªÅn: ${order.total_amount} ƒë</p>
                            <p>Tr·∫°ng th√°i: ${order.status}</p>
                            <p>Ng∆∞·ªùi nh·∫≠n: ${order.shipping_name}</p>
                            <p>SƒêT: ${order.shipping_phone}</p>
                            <p>ƒê·ªãa ch·ªâ: ${order.shipping_address}</p>
                        </div>
                        <hr>
                        <div class="order-actions" onclick="showOrderDetails(${order.order_id})">
                            <i class='bx bx-edit-alt' ></i>
                        </div>
                    `;
                    container.appendChild(orderElement);
                });
            } catch (e) {
                console.error("D·ªØ li·ªáu kh√¥ng ph·∫£i JSON:", text);
            }
        })
        .catch(err => {
            console.error("L·ªói khi fetch ƒë∆°n h√†ng:", err);
        });
}

// ======= C√°c h√†m h·ªó tr·ª£ API =======
async function getOrderDetails(order_id) {
    const res = await fetch(`includes/get_order_details.php?order_id=${order_id}`);
    const data = await res.json();
    return data.status === 'success' ? data.details : [];
}



// ======= Hi·ªÉn th·ªã chi ti·∫øt ƒë∆°n h√†ng =======
async function showOrderDetails(order_id) {
    const detailsDialog = document.querySelector(".order-details-dialog");
    detailsDialog.classList.toggle("active");

    const dialog = document.getElementById('order-dialog');
    dialog.innerHTML = ''; // clear previous
    dialog.style.display = 'block';

    const details = await getOrderDetails(order_id);
    console.log(details);
    if (!details.length) {
        dialog.innerHTML = '<p>Kh√¥ng c√≥ chi ti·∫øt ƒë∆°n h√†ng.</p>';
        return;
    }

    let html = `<h3>Chi ti·∫øt ƒë∆°n h√†ng #${order_id}</h3><ul style="list-style:none;padding:0;">`;

    let totalQuantity = 0;
    let totalPrice = 0;

    for (const item of details) {
        console.log(item.product_size_id);

        const sizeInfo = await getProductSizeInfo(item.product_size_id);
        console.log(sizeInfo);
        if (!sizeInfo) continue;

        const product = await getProductInfo(sizeInfo.product_id);
        console.log(product);
        if (!product) continue;

        const itemTotalPrice = item.quantity * item.price;
        totalQuantity += item.quantity;
        totalPrice += itemTotalPrice;

        html += `
            <li style="margin-bottom: 15px;">
                <img src="${product.image}" alt="${product.name}" style="width:100px;height:auto;">
                <br>
                <strong>${product.name}</strong><br>
                Size: ${sizeInfo.size}<br>
                S·ªë l∆∞·ª£ng: ${item.quantity}<br>
                Gi√°: ${Number(item.price).toLocaleString()} ƒë<br>
                Th√†nh ti·ªÅn: ${Number(itemTotalPrice).toLocaleString()} ƒë
                <hr>
            </li>
        `;
    }

    html += `</ul>
        <div style="margin-top: 20px; font-weight: bold;">
            T·ªïng s·ªë l∆∞·ª£ng: ${totalQuantity} <br>
            T·ªïng ti·ªÅn: ${Number(totalPrice).toLocaleString()} ƒë
        </div>
    `;

    dialog.innerHTML = html;
}



// B·∫•m n√∫t X ƒë·ªÉ ƒë√≥ng
function setupCloseOrderDetails() {
    const closeBtn = document.getElementById("closeDetails");
    const dialog = document.querySelector(".order-details-dialog");

    if (closeBtn && dialog) {
        closeBtn.addEventListener("click", () => {
            dialog.classList.remove("active");
        });
    } else {
        console.warn("Kh√¥ng t√¨m th·∫•y #closeDetails ho·∫∑c .order-details-dialog trong DOM.");
    }
}


function initUserPage() {
  initEditUserPopup();      // G√°n s·ª± ki·ªán cho n√∫t ch·ªânh s·ª≠a
  initUserFormHandler();    // G·ª≠i form ch·ªânh s·ª≠a
}

function initEditUserPopup() {
  const editBtn = document.getElementById("edit-user-btn");
  const overlay = document.getElementById("edit-user-overlay");
  const popup = document.getElementById("edit-user-popup");
  const cancelBtn = document.getElementById("cancel-edit");

  if (!editBtn || !overlay || !popup || !cancelBtn) return;

  editBtn.addEventListener("click", () => {
    document.getElementById("edit-name").value = document.getElementById("name").textContent;
    document.getElementById("edit-email").value = document.getElementById("email").textContent;
    document.getElementById("edit-phone").value = document.getElementById("phone").textContent;
    document.getElementById("edit-address").value = document.getElementById("address").textContent;

    overlay.style.display = "block";
    popup.style.display = "block";
  });

  cancelBtn.addEventListener("click", closeEditPopup);
  overlay.addEventListener("click", closeEditPopup);
}

function closeEditPopup() {
  const overlay = document.getElementById("edit-user-overlay");
  const popup = document.getElementById("edit-user-popup");
  if (overlay && popup) {
    overlay.style.display = "none";
    popup.style.display = "none";
  }
}

function initUserFormHandler() {
  const form = document.getElementById("edit-user-form");
  if (!form) return;

  form.addEventListener("submit", function (e) {
    e.preventDefault();

    const updatedInfo = {
      name: document.getElementById("edit-name").value,
      email: document.getElementById("edit-email").value,
      phone: document.getElementById("edit-phone").value,
      address: document.getElementById("edit-address").value,
      user_id: window.user_id || null
    };

    updateUserInfo(updatedInfo);
  });
}

function updateUserInfo(updatedInfo) {
  fetch("/web2/includes/update_user_info.php", {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify(updatedInfo)
  })
  .then(response => response.text()) // L·∫•y th√¥ n·ªôi dung tr·∫£ v·ªÅ
  .then(text => {
    try {
      const data = JSON.parse(text); // C·ªë parse JSON
      if (data.status === "success") {
        showMessageDialog("‚úÖ C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!");
        fetchUser(); // G·ªçi l·∫°i ƒë·ªÉ load th√¥ng tin m·ªõi
      } else {
        showMessageDialog("‚ùå " + (data.message || "C·∫≠p nh·∫≠t th·∫•t b·∫°i!"));
      }
    } catch (error) {
      console.error("‚ùå Kh√¥ng parse ƒë∆∞·ª£c JSON:", text);
      showMessageDialog("‚ùå L·ªói h·ªá th·ªëng: d·ªØ li·ªáu ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá.");
    }
  })
  .catch(error => {
    console.error("‚ùå L·ªói khi g·ª≠i y√™u c·∫ßu c·∫≠p nh·∫≠t:", error);
    showMessageDialog("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.");
  });
}

function gannut(){
  document.getElementById('logout-btn').addEventListener('click', handleLogout);

}

function handleLogout() {
    saveCartToServer();
    fetch('/web2/includes/logout.php', {
        method: 'POST'
    })
    .then(res => res.text())
    .then(text => {
        console.log("üîÅ Ph·∫£n h·ªìi th√¥ t·ª´ server:", text);
        let data;

        try {
            data = JSON.parse(text);
        } catch (e) {
            console.error("‚ùå L·ªói ph√¢n t√≠ch JSON:", e);
            showMessageDialog("‚ùå Ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá t·ª´ m√°y ch·ªß.");
            return;
        }

        if (data.status === 'success') {
            
            showMessageDialog(data.message); // ho·∫∑c hi·ªÉn th·ªã b·∫±ng modal
           window.location.href = '/web2/index.php';
        } else {
            alert("‚ùå ƒêƒÉng xu·∫•t th·∫•t b·∫°i: " + (data.message || 'Kh√¥ng r√µ nguy√™n nh√¢n.'));
        }
    })
    .catch(error => {
        console.error("‚ùå L·ªói khi g·ª≠i y√™u c·∫ßu ƒëƒÉng xu·∫•t:", error);
        alert("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi m√°y ch·ªß.");
    });
}

function saveCartToServer() {
    if (!window.cartUser || window.cartUser.length === 0) {
        console.log('Gi·ªè h√†ng tr·ªëng, kh√¥ng g·ª≠i d·ªØ li·ªáu.');
        return;
    }

    fetch('/web2/includes/save_cart.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ cart: window.cartUser })
    })
    .then(res => res.text())  // Nh·∫≠n response d·∫°ng text
    .then(responseText => {
        try {
            const data = JSON.parse(responseText);
            if (data.status === 'success') {
                console.log('L∆∞u gi·ªè h√†ng th√†nh c√¥ng!');
            } else {
                console.error('L·ªói khi l∆∞u gi·ªè h√†ng:', data.message);
            }
        } catch (error) {
            console.error('L·ªói parse JSON:', error);
            console.log('Response text:', responseText);
        }
    })
    .catch(err => {
        console.error('L·ªói fetch:', err);
    });
}


